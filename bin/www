'use strict';

/**
 * Kickstart app
 */

var app = require('../app');
var http = require('http');
var debug = require('debug')('Express:www');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 * TODO: Switch to nginx then just listen to localhost
 */

server.listen(port);
debug('Listening on ' + port);
server.on('error', onError);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Enable graceful shutdown
 */
var gracefulShutdown = function(){
    console.log("Gracefully shutting down...");
    server.close(function(){
        process.exit();
    });
    
    setTimeout(function(){
        process.exit();
    }, 10*1000);
}

process.on('SIGINT', gracefulShutdown);
